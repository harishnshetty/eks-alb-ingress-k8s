apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myingress
  namespace: store-ns
  annotations:
    # ALB Scheme
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/load-balancer-name: store-ns-alb

    # Target Mode
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'

    # Health Checks
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/success-codes: '200'

    # SSL
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:123456789012:certificate/your-certificate-id # Replace with your ACM certificate ARN
    alb.ingress.kubernetes.io/ssl-redirect: '443'
spec:
  ingressClassName: alb
  rules:
    # Android store domain
    - host: android.harishshetty.xyz
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: android-service
                port:
                  number: 80

    # iPhone store domain
    - host: iphone.harishshetty.xyz
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: iphone-service
                port:
                  number: 80

    # Laptop store domain
    - host: laptop.harishshetty.xyz
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: laptop-service
                port:
                  number: 80
